function isInside = TestPoint(pointCloud, queryPoint)
    % Check if a point lies within a non-convex 3D point cloud with inner and outer limits


    queryPoint = queryPoint(1:3,4)';
    % Extract the x, y, and z coordinates of the points in the point cloud
    cloudX = pointCloud(:, 1);
    cloudY = pointCloud(:, 2);
    cloudZ = pointCloud(:, 3);

    % Create a 3D point cloud
    cloudPoints = [cloudX, cloudY, cloudZ];

    % Compute the Delaunay triangulation of the point cloud
    dt = delaunayTriangulation(cloudPoints);

    % Find the tetrahedron that contains the query point
    tetrahedronIndex = pointLocation(dt, queryPoint);

    % Check if the point is inside the point cloud using inpolygon
    isInside = ~isnan(tetrahedronIndex);

    % Display the result
    if isInside
        fprintf('The query point is inside the point cloud.\n');
    else
        fprintf('The query point is outside the point cloud.\n');
    end


end
